%% -*-: erlang -*-
CONFIG1 =
    case {os:getenv("GITHUB_ACTIONS"), os:getenv("GITHUB_TOKEN")} of
      {"true", Token} when is_list(Token) ->
        CONF = [{coveralls_repo_token, Token},
                 {coveralls_service_job_id, os:getenv("GITHUB_RUN_ID")},
                 {coveralls_commit_sha, os:getenv("GITHUB_SHA")},
                 {coveralls_service_number, os:getenv("GITHUB_RUN_NUMBER")},
                 {coveralls_coverdata, "_build/test/cover/*.coverdata"},
                 {coveralls_service_name, "github"} | CONFIG],
        case os:getenv("GITHUB_EVENT_NAME") =:= "pull_request"
            andalso string:tokens(os:getenv("GITHUB_REF"), "/") of
            [_, "pull", PRNO, _] ->
                [{coveralls_service_pull_request, PRNO} | CONF];
            _ ->
                CONF
        end;
      _ ->
        CONFIG
    end.

CUR_BRANCH = os:cmd("git branch | grep -e '^*' | cut -d' ' -f 2") -- "\n",

MATCH_BRANCH = fun (BranchName) when BranchName =:= "master";
                                     BranchName =:= "develop" ->
                       BranchName;
                   (BranchName) ->
                       case string:prefix(BranchName, "release") of
                           nomatch -> "develop";
                           _Match -> BranchName
                       end
               end,

BRANCH = MATCH_BRANCH(CUR_BRANCH),

DEPS = case lists:keyfind(deps, 1, CONFIG1) of
           {_, Deps} -> Deps;
           _ -> []
       end,

UrlPrefix = "https://github.com/emqx/",

EMQX_DEP = {emqx, {git, UrlPrefix ++ "emqx", {branch, BRANCH}}},

NewDeps = [EMQX_DEP | DEPS],

CONFIG2 = lists:keystore(deps, 1, CONFIG1, {deps, NewDeps}),

CONFIG2.
